@model SecureWebApp.Models.ApiTestViewModel
@{
    ViewData["Title"] = "Pruebas de API Segura";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2><i class="fas fa-api"></i> Pruebas de API Segura</h2>
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Volver al Inicio
                </a>
            </div>

            <div class="alert alert-info">
                <strong><i class="fas fa-info-circle"></i> Información:</strong>
                Esta página prueba diferentes endpoints de la API segura para demostrar la funcionalidad de autenticación y autorización.
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h5><i class="fas fa-cog"></i> Configuración de la API</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <strong>URL Base de la API:</strong> 
                            <code>@Model.ApiBaseUrl</code>
                        </div>
                        <div class="col-md-6">
                            <strong>Token de Acceso:</strong>
                            <span class="badge @(Model.HasAccessToken ? "bg-success" : "bg-danger")">
                                @(Model.HasAccessToken ? "Disponible" : "No Disponible")
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-flask"></i> Resultados de las Pruebas</h5>
                </div>
                <div class="card-body">
                    @if (Model.Results.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Endpoint</th>
                                        <th>Requiere Auth</th>
                                        <th>Estado</th>
                                        <th>Código HTTP</th>
                                        <th>Respuesta</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var result in Model.Results)
                                    {
                                        <tr class="@(result.Success ? "table-success" : "table-danger")">
                                            <td>
                                                <code>@result.Endpoint</code>
                                            </td>
                                            <td>
                                                <span class="badge @(result.RequiresAuth ? "bg-warning" : "bg-info")">
                                                    @(result.RequiresAuth ? "Sí" : "No")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(result.Success ? "bg-success" : "bg-danger")">
                                                    @(result.Success ? "Exitoso" : "Error")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @GetStatusCodeClass(result.StatusCode)">
                                                    @(result.StatusCode > 0 ? result.StatusCode.ToString() : "N/A")
                                                </span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-primary" type="button" 
                                                        data-bs-toggle="collapse" 
                                                        data-bs-target="#response-@result.Endpoint.Replace("/", "").Replace("-", "")" 
                                                        aria-expanded="false">
                                                    Ver Respuesta
                                                </button>
                                                <div class="collapse mt-2" id="response-@result.Endpoint.Replace("/", "").Replace("-", "")">
                                                    <div class="card card-body">
                                                        <pre><code>@result.Response</code></pre>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle"></i>
                            No se encontraron resultados de pruebas.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card border-info">
                <div class="card-header bg-info text-white">
                    <h5><i class="fas fa-lightbulb"></i> Interpretación de Resultados</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h6>Códigos de Estado HTTP:</h6>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><span class="badge bg-success">200</span> - Éxito</li>
                                <li class="list-group-item"><span class="badge bg-warning">401</span> - No autorizado</li>
                                <li class="list-group-item"><span class="badge bg-warning">403</span> - Prohibido</li>
                                <li class="list-group-item"><span class="badge bg-danger">500</span> - Error del servidor</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h6>Endpoints Probados:</h6>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item">
                                    <code>/health</code> - Endpoint público de salud
                                </li>
                                <li class="list-group-item">
                                    <code>/securedata</code> - Endpoint protegido básico
                                </li>
                                <li class="list-group-item">
                                    <code>/api/secure/user-info</code> - Información del usuario
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="d-flex justify-content-center">
                <a href="@Url.Action("ApiTest", "Home")" class="btn btn-primary me-2">
                    <i class="fas fa-sync-alt"></i> Volver a Probar
                </a>
                <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">
                    <i class="fas fa-home"></i> Ir al Inicio
                </a>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusCodeClass(int statusCode)
    {
        return statusCode switch
        {
            200 => "bg-success",
            401 or 403 => "bg-warning",
            >= 400 and < 500 => "bg-warning",
            >= 500 => "bg-danger",
            _ => "bg-secondary"
        };
    }
} 