Laboratorio Pr√°ctico - Sesi√≥n 6: Seguridad de Infraestructura Azure
Curso: Dise√±o Seguro de Aplicaciones (.NET en Azure)
Duraci√≥n Total: 90 minutos (4 laboratorios)
Modalidad: Instructor-led con pr√°ctica individual
Herramientas: Visual Studio Code + .NET 9 + C# + Azure Portal
________________________________________
üõ†Ô∏è LABORATORIO 0: VERIFICACI√ìN Y CONFIGURACI√ìN DEL ENTORNO
‚è±Ô∏è Duraci√≥n: 15 minutos
üéØ Objetivo: Preparar entorno completo para laboratorios de infraestructura Azure
Paso 1: Instalaci√≥n de Chocolatey (si no est√° instalado) (3 minutos)
Para usuarios Windows 10/11:
1.	Abrir PowerShell como Administrador:
o	Click derecho en el bot√≥n de Windows
o	Seleccionar "Windows PowerShell (Admin)" o "Terminal (Admin)"
2.	Verificar si Chocolatey est√° instalado:
3.	choco --version
4.	Si NO est√° instalado, ejecutar:
5.	# Cambiar pol√≠tica de ejecuci√≥n temporalmente
6.	Set-ExecutionPolicy Bypass -Scope Process -Force
7.	
8.	# Instalar Chocolatey
9.	[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
10.	iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
11.	Verificar instalaci√≥n:
12.	choco --version
13.	# Debe mostrar versi√≥n de Chocolatey
Paso 2: Instalaci√≥n de .NET 9 y Herramientas (5 minutos)
Instalar .NET 9 SDK:
# Instalar .NET 9 SDK (√∫ltima versi√≥n)
choco install dotnet-9.0-sdk -y

# Instalar Azure CLI
choco install azure-cli -y

# Instalar Git (si no est√° instalado)
choco install git -y

# Refrescar variables de entorno
refreshenv
Verificar instalaciones:
# Verificar .NET 9
dotnet --version
# Debe mostrar: 9.0.x

# Verificar Azure CLI
az --version

# Verificar Git
git --version
Paso 3: Configuraci√≥n de Visual Studio Code (4 minutos)
Instalar VS Code (si no est√° instalado):
choco install vscode -y
Extensiones requeridas para VS Code:
1.	Abrir VS Code y instalar extensiones: 
o	Presionar Ctrl + Shift + X para abrir extensiones
o	Buscar e instalar las siguientes extensiones:
o	C# Dev Kit (Microsoft) - ID: ms-dotnettools.csdevkit
o	Azure Account (Microsoft) - ID: ms-vscode.azure-account
o	Azure Resources (Microsoft) - ID: ms-azuretools.vscode-azureresourcegroups
o	Azure CLI Tools (Microsoft) - ID: ms-vscode.azurecli
o	REST Client (Huachao Mao) - ID: humao.rest-client
Comando alternativo para instalar extensiones:
# Desde l√≠nea de comandos
code --install-extension ms-dotnettools.csdevkit
code --install-extension ms-vscode.azure-account
code --install-extension ms-azuretools.vscode-azureresourcegroups
code --install-extension ms-vscode.azurecli
code --install-extension humao.rest-client
Paso 4: Verificaci√≥n de Acceso Azure (3 minutos)
Autenticaci√≥n con Azure:
# Login a Azure
az login

# Verificar suscripciones disponibles
az account list --output table

# Verificar grupo de usuarios
az ad group member list --group "gu_desarrollo_seguro_aplicacion" --output table
Verificar permisos en Azure Portal:
1.	Navegar a: https://portal.azure.com
2.	Verificar acceso como usuario invitado
3.	Confirmar permisos para crear recursos de red
________________________________________
üß™ LABORATORIO 1: CREACI√ìN DE VIRTUAL NETWORK (VNET) SEGURA
‚è±Ô∏è Duraci√≥n: 20 minutos
üéØ Objetivo: Crear y configurar una Virtual Network con segmentaci√≥n apropiada
Paso 1: Creaci√≥n del Resource Group Base (3 minutos)
Desde Azure Portal:
1.	Navegar a Resource Groups:
o	Azure Portal ‚Üí Resource groups ‚Üí + Create
2.	Configuraci√≥n del Resource Group:
3.	Subscription: [Su suscripci√≥n asignada]
4.	Resource group: rg-infraestructura-segura-[SuNombre]
5.	Region: East US
6.	Tags (etiquetas):
7.	Environment: Development
8.	Project: InfraestructuraSegura
9.	Owner: [Su nombre]
10.	Course: DesarrolloSeguroAzure
Comando alternativo con Azure CLI:
# Crear resource group
az group create \
  --name rg-infraestructura-segura-[SuNombre] \
  --location eastus \
  --tags Environment=Development Project=InfraestructuraSegura
Paso 2: Planificaci√≥n del Address Space (2 minutos)
Dise√±o de la arquitectura de red:
VNET Principal: 10.1.0.0/16 (65,534 IPs disponibles)

‚îú‚îÄ‚îÄ DMZ Subnet: 10.1.1.0/24 (254 IPs)
‚îÇ   ‚îî‚îÄ‚îÄ Componentes: Load Balancers, WAF, Bastion
‚îÇ
‚îú‚îÄ‚îÄ Private Subnet: 10.1.2.0/24 (254 IPs) 
‚îÇ   ‚îî‚îÄ‚îÄ Componentes: App Servers, APIs internas
‚îÇ
‚îú‚îÄ‚îÄ Data Subnet: 10.1.3.0/24 (254 IPs)
‚îÇ   ‚îî‚îÄ‚îÄ Componentes: Databases, Storage
‚îÇ
‚îî‚îÄ‚îÄ Management Subnet: 10.1.10.0/24 (254 IPs)
    ‚îî‚îÄ‚îÄ Componentes: Jump boxes, Management tools
Paso 3: Crear Virtual Network Principal (8 minutos)
Desde Azure Portal:
1.	Navegar a Virtual Networks:
o	Azure Portal ‚Üí Virtual networks ‚Üí + Create
2.	Configuraci√≥n B√°sica:
3.	Subscription: [Su suscripci√≥n]
4.	Resource group: rg-infraestructura-segura-[SuNombre]
5.	Name: vnet-principal-[sunombre]
6.	Region: East US
7.	IP Addresses:
8.	IPv4 address space: 10.1.0.0/16
9.	Crear las 4 subredes:
Subnet 1 - DMZ:
Name: snet-dmz
Subnet address range: 10.1.1.0/24
Subnet 2 - Private:
Name: snet-private  
Subnet address range: 10.1.2.0/24
Subnet 3 - Data:
Name: snet-data
Subnet address range: 10.1.3.0/24
Subnet 4 - Management:
Name: snet-management
Subnet address range: 10.1.10.0/24
10.	Security (mantener defaults por ahora):
o	BastionHost: Disabled (lo configuraremos despu√©s)
o	DDoS Protection Standard: Disabled (para laboratorio)
o	Firewall: Disabled (lo configuraremos despu√©s)
Comando alternativo con Azure CLI:
# Crear VNET con subredes
az network vnet create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --name vnet-principal-[sunombre] \
  --address-prefix 10.1.0.0/16 \
  --subnet-name snet-dmz \
  --subnet-prefix 10.1.1.0/24

# A√±adir subredes adicionales
az network vnet subnet create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --vnet-name vnet-principal-[sunombre] \
  --name snet-private \
  --address-prefix 10.1.2.0/24

az network vnet subnet create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --vnet-name vnet-principal-[sunombre] \
  --name snet-data \
  --address-prefix 10.1.3.0/24

az network vnet subnet create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --vnet-name vnet-principal-[sunombre] \
  --name snet-management \
  --address-prefix 10.1.10.0/24
Paso 4: Verificaci√≥n de la VNET (4 minutos)
Verificar configuraci√≥n:
1.	En Azure Portal:
o	Ir a su VNET creada
o	Verificar: Overview ‚Üí Address space
o	Verificar: Subnets ‚Üí Ver las 4 subredes creadas
2.	Con Azure CLI:
3.	# Listar VNETs
4.	az network vnet list --resource-group rg-infraestructura-segura-[SuNombre] --output table
5.	
6.	# Ver detalles de subredes
7.	az network vnet subnet list \
8.	  --resource-group rg-infraestructura-segura-[SuNombre] \
9.	  --vnet-name vnet-principal-[sunombre] \
10.	  --output table
Paso 5: Configurar DNS Personalizado (Opcional) (3 minutos)
Para empresas que requieren DNS personalizado:
1.	En su VNET ‚Üí DNS servers:
2.	DNS servers: Custom
3.	DNS server addresses: 
4.	- 8.8.8.8 (Google DNS - para laboratorio)
5.	- 8.8.4.4 (Google DNS secundario)
6.	Aplicar configuraci√≥n y esperar propagaci√≥n.
‚úÖ Resultado Esperado:
‚Ä¢	VNET creada con 4 subredes segmentadas
‚Ä¢	Address space apropiadamente planificado
‚Ä¢	DNS configurado (opcional)
‚Ä¢	Base para implementar security groups
________________________________________
üß™ LABORATORIO 2: IMPLEMENTACI√ìN DE NETWORK SECURITY GROUPS (NSGs)
‚è±Ô∏è Duraci√≥n: 25 minutos
üéØ Objetivo: Crear y configurar NSGs con reglas de seguridad granulares para cada subnet
Paso 1: Crear NSG para DMZ Subnet (6 minutos)
Crear NSG-DMZ:
1.	Azure Portal ‚Üí Network security groups ‚Üí + Create:
2.	Subscription: [Su suscripci√≥n]
3.	Resource group: rg-infraestructura-segura-[SuNombre]
4.	Name: nsg-dmz-[sunombre]
5.	Region: East US
6.	Configurar reglas de seguridad para DMZ:
Regla 1 - Permitir HTTP/HTTPS desde Internet:
Name: Allow-HTTP-HTTPS-Inbound
Priority: 100
Source: Any
Source port ranges: *
Destination: Any  
Destination port ranges: 80,443
Protocol: TCP
Action: Allow
Regla 2 - Permitir SSH para administraci√≥n:
Name: Allow-SSH-Management
Priority: 110
Source: 10.1.10.0/24 (Management subnet)
Source port ranges: *
Destination: Any
Destination port ranges: 22
Protocol: TCP
Action: Allow
Regla 3 - Denegar todo lo dem√°s:
Name: Deny-All-Other-Inbound
Priority: 4000
Source: Any
Source port ranges: *
Destination: Any
Destination port ranges: *
Protocol: Any
Action: Deny
Comando Azure CLI para crear NSG-DMZ:
# Crear NSG
az network nsg create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --name nsg-dmz-[sunombre] \
  --location eastus

# Agregar reglas
az network nsg rule create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --nsg-name nsg-dmz-[sunombre] \
  --name Allow-HTTP-HTTPS-Inbound \
  --priority 100 \
  --source-address-prefixes '*' \
  --destination-port-ranges 80 443 \
  --access Allow \
  --protocol Tcp
Paso 2: Crear NSG para Private Subnet (6 minutos)
Crear NSG-Private:
1.	Crear el NSG:
2.	Name: nsg-private-[sunombre]
3.	Resource group: rg-infraestructura-segura-[SuNombre]
4.	Reglas para Private Subnet:
Regla 1 - Permitir tr√°fico desde DMZ:
Name: Allow-DMZ-to-Private
Priority: 100
Source: 10.1.1.0/24 (DMZ subnet)
Destination: 10.1.2.0/24 (Private subnet)
Destination port ranges: 80,443,8080,8443
Protocol: TCP
Action: Allow
Regla 2 - Permitir comunicaci√≥n interna:
Name: Allow-Private-Internal
Priority: 110
Source: 10.1.2.0/24
Destination: 10.1.2.0/24
Destination port ranges: *
Protocol: Any
Action: Allow
Regla 3 - Permitir acceso a Data subnet:
Name: Allow-Private-to-Data
Priority: 120
Source: 10.1.2.0/24
Destination: 10.1.3.0/24
Destination port ranges: 1433,3306,5432 # SQL Server, MySQL, PostgreSQL
Protocol: TCP
Action: Allow
Regla 4 - Denegar Internet directo:
Name: Deny-Internet-Direct
Priority: 4000
Source: Internet
Destination: 10.1.2.0/24
Destination port ranges: *
Protocol: Any
Action: Deny
Paso 3: Crear NSG para Data Subnet (6 minutos)
Crear NSG-Data (M√°xima Seguridad):
1.	Crear el NSG:
2.	Name: nsg-data-[sunombre]
3.	Reglas restrictivas para Data:
Regla 1 - Solo Private subnet puede acceder:
Name: Allow-Private-to-Data-DB
Priority: 100
Source: 10.1.2.0/24 (Private subnet only)
Destination: 10.1.3.0/24
Destination port ranges: 1433,3306,5432,6379 # Databases + Redis
Protocol: TCP
Action: Allow
Regla 2 - Permitir backup desde Management:
Name: Allow-Management-Backup
Priority: 110
Source: 10.1.10.0/24
Destination: 10.1.3.0/24
Destination port ranges: 22,3389 # SSH, RDP para backups
Protocol: TCP
Action: Allow
Regla 3 - Denegar todo lo dem√°s:
Name: Deny-All-Other-Data
Priority: 4000
Source: Any
Destination: 10.1.3.0/24
Destination port ranges: *
Protocol: Any
Action: Deny
Paso 4: Crear NSG para Management Subnet (4 minutos)
Crear NSG-Management:
1.	Reglas para administraci√≥n segura:
Regla 1 - SSH/RDP desde ubicaciones espec√≠ficas:
Name: Allow-Admin-Access
Priority: 100
Source: [Su IP p√∫blica actual] # Usar whatismyip.com
Destination: 10.1.10.0/24
Destination port ranges: 22,3389
Protocol: TCP
Action: Allow
Regla 2 - Acceso a todas las subredes para administraci√≥n:
Name: Allow-Management-to-All
Priority: 110
Source: 10.1.10.0/24
Destination: 10.1.0.0/16 # Toda la VNET
Destination port ranges: *
Protocol: Any
Action: Allow
Paso 5: Asociar NSGs con Subredes (3 minutos)
Asociar cada NSG con su subnet correspondiente:
1.	DMZ Subnet:
o	VNET ‚Üí Subnets ‚Üí snet-dmz ‚Üí Network security group ‚Üí nsg-dmz-[sunombre]
2.	Private Subnet:
o	VNET ‚Üí Subnets ‚Üí snet-private ‚Üí Network security group ‚Üí nsg-private-[sunombre]
3.	Data Subnet:
o	VNET ‚Üí Subnets ‚Üí snet-data ‚Üí Network security group ‚Üí nsg-data-[sunombre]
4.	Management Subnet:
o	VNET ‚Üí Subnets ‚Üí snet-management ‚Üí Network security group ‚Üí nsg-management-[sunombre]
Con Azure CLI:
# Asociar NSGs con subredes
az network vnet subnet update \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --vnet-name vnet-principal-[sunombre] \
  --name snet-dmz \
  --network-security-group nsg-dmz-[sunombre]

# Repetir para las otras subredes...
‚úÖ Resultado Esperado:
‚Ä¢	4 NSGs creados con reglas espec√≠ficas
‚Ä¢	Cada subnet protegida por su NSG correspondiente
‚Ä¢	Tr√°fico controlado seg√∫n principios de seguridad
‚Ä¢	Base lista para deployment de recursos
________________________________________
üß™ LABORATORIO 3: IMPLEMENTACI√ìN DE AZURE BASTION Y JUMP BOX
‚è±Ô∏è Duraci√≥n: 20 minutos
üéØ Objetivo: Implementar acceso administrativo seguro usando Azure Bastion y Jump Box personalizado
Paso 1: Crear Subnet para Azure Bastion (3 minutos)
Azure Bastion requiere subnet espec√≠fica:
1.	Agregar AzureBastionSubnet:
2.	VNET: vnet-principal-[sunombre]
3.	Subnet name: AzureBastionSubnet (nombre obligatorio)
4.	Subnet address range: 10.1.100.0/26 (m√≠nimo /26 requerido)
5.	En Azure Portal:
o	VNET ‚Üí Subnets ‚Üí + Subnet
o	Name: AzureBastionSubnet
o	Address range: 10.1.100.0/26
Con Azure CLI:
# Crear subnet para Bastion
az network vnet subnet create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --vnet-name vnet-principal-[sunombre] \
  --name AzureBastionSubnet \
  --address-prefix 10.1.100.0/26
Paso 2: Implementar Azure Bastion (8 minutos)
Crear Azure Bastion Host:
1.	Azure Portal ‚Üí Bastions ‚Üí + Create:
2.	Subscription: [Su suscripci√≥n]
3.	Resource group: rg-infraestructura-segura-[SuNombre]
4.	Name: bastion-[sunombre]
5.	Region: East US
6.	Tier: Basic (para laboratorio)
7.	Virtual network: vnet-principal-[sunombre]
8.	Subnet: AzureBastionSubnet (auto-seleccionado)
9.	Public IP para Bastion:
10.	Public IP address: Create new
11.	Public IP name: pip-bastion-[sunombre]
12.	SKU: Standard
13.	Assignment: Static
14.	Review + Create ‚Üí Esperar deployment (toma 5-10 minutos)
‚ö†Ô∏è Nota: Azure Bastion es un servicio premium. Para laboratorio, tambi√©n implementaremos Jump Box como alternativa.
Paso 3: Crear Jump Box VM (7 minutos)
Crear VM de administraci√≥n en Management Subnet:
1.	Azure Portal ‚Üí Virtual machines ‚Üí + Create:
Basics:
Subscription: [Su suscripci√≥n]
Resource group: rg-infraestructura-segura-[SuNombre]
Virtual machine name: vm-jumpbox-[sunombre]
Region: East US
Image: Windows Server 2022 Datacenter
Size: Standard_B2s (2 vcpus, 4 GB RAM)
Administrator account:
Authentication type: Password
Username: azureadmin
Password: [Contrase√±a segura - ej: JumpBox2024!]
2.	Networking:
3.	Virtual network: vnet-principal-[sunombre]
4.	Subnet: snet-management (10.1.10.0/24)
5.	Public IP: None (acceso solo v√≠a Bastion)
6.	NIC network security group: None (usaremos subnet NSG)
7.	Disks:
8.	OS disk type: Premium SSD (mejor para administraci√≥n)
9.	Management:
10.	Enable auto-shutdown: Yes
11.	Shutdown time: 23:00 (para laboratorio)
Paso 4: Configurar Acceso Seguro (2 minutos)
Configurar NSG para permitir Bastion:
1.	Actualizar nsg-management-[sunombre]:
Nueva regla para Azure Bastion:
Name: Allow-Bastion-Inbound
Priority: 90
Source: 10.1.100.0/26 (AzureBastionSubnet)
Destination: 10.1.10.0/24 (Management subnet)
Destination port ranges: 3389,22
Protocol: TCP
Action: Allow
Con Azure CLI:
# Agregar regla para Bastion
az network nsg rule create \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --nsg-name nsg-management-[sunombre] \
  --name Allow-Bastion-Inbound \
  --priority 90 \
  --source-address-prefixes 10.1.100.0/26 \
  --destination-address-prefixes 10.1.10.0/24 \
  --destination-port-ranges 3389 22 \
  --access Allow \
  --protocol Tcp
‚úÖ Resultado Esperado:
‚Ä¢	Azure Bastion deployado (si el presupuesto lo permite)
‚Ä¢	Jump Box VM creada en Management subnet
‚Ä¢	Acceso administrativo seguro configurado
‚Ä¢	No exposici√≥n directa a Internet
________________________________________
üß™ LABORATORIO 4: TESTING DE CONECTIVIDAD Y ARQUITECTURA HUB-AND-SPOKE
‚è±Ô∏è Duraci√≥n: 10 minutos
üéØ Objetivo: Validar la arquitectura implementada y preparar para Hub-and-Spoke
Paso 1: Testing de Conectividad B√°sica (3 minutos)
Verificar NSG Rules:
1.	Azure Portal ‚Üí Network security groups:
o	Verificar que los 4 NSGs est√°n asociados
o	Review effective security rules para cada subnet
2.	Usar Azure Network Watcher:
3.	Azure Portal ‚Üí Network Watcher ‚Üí IP flow verify
4.	
5.	Test 1:
6.	Source: 10.1.1.10 (DMZ)
7.	Destination: 10.1.2.10 (Private) 
8.	Port: 443
9.	Expected: Allow
10.	
11.	Test 2:
12.	Source: Internet
13.	Destination: 10.1.3.10 (Data)
14.	Port: 1433
15.	Expected: Deny
Con Azure CLI:
# Verificar effective routes
az network nic show-effective-route-table \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --name [NIC-name] \
  --output table
Paso 2: Documentar la Arquitectura Implementada (4 minutos)
Crear documentaci√≥n de la infraestructura:
1.	Crear archivo: arquitectura-implementada.md
# Infraestructura Segura - [Su Nombre]

## Virtual Network
- **VNET:** vnet-principal-[sunombre] (10.1.0.0/16)
- **Region:** East US
- **DNS:** Azure Default

## Subnets y Segmentaci√≥n

### DMZ Subnet (10.1.1.0/24)
- **Prop√≥sito:** Servicios expuestos a Internet
- **NSG:** nsg-dmz-[sunombre]
- **Reglas:** HTTP/HTTPS permitido desde Internet

### Private Subnet (10.1.2.0/24) 
- **Prop√≥sito:** Aplicaciones internas
- **NSG:** nsg-private-[sunombre]
- **Reglas:** Solo acceso desde DMZ

### Data Subnet (10.1.3.0/24)
- **Prop√≥sito:** Bases de datos y almacenamiento
- **NSG:** nsg-data-[sunombre]
- **Reglas:** Solo acceso desde Private

### Management Subnet (10.1.10.0/24)
- **Prop√≥sito:** Administraci√≥n y Jump Box
- **NSG:** nsg-management-[sunombre]
- **Recursos:** vm-jumpbox-[sunombre]

### Azure Bastion Subnet (10.1.100.0/26)
- **Prop√≥sito:** Acceso administrativo seguro
- **Recurso:** bastion-[sunombre]

## Principios de Seguridad Implementados
- ‚úÖ Defense in Depth
- ‚úÖ Principle of Least Privilege
- ‚úÖ Network Segmentation
- ‚úÖ Secure Administrative Access
Paso 3: Preparaci√≥n para Hub-and-Spoke (3 minutos)
Planificar expansi√≥n Hub-and-Spoke:
1.	La VNET actual se convertir√° en Hub VNET
2.	Planificar Spoke VNETs:
3.	Spoke 1 - Production: 10.2.0.0/16
4.	Spoke 2 - Development: 10.3.0.0/16
5.	Spoke 3 - Testing: 10.4.0.0/16
6.	Servicios compartidos en Hub:
o	Azure Firewall (pr√≥xima sesi√≥n)
o	DNS Servers
o	Monitoring y Logging
o	VPN Gateway (para on-premises)
Crear planificaci√≥n:
# Expansi√≥n Hub-and-Spoke Planificada

## Hub VNET (Actual)
- **VNET:** vnet-principal-[sunombre] (10.1.0.0/16)
- **Servicios compartidos:** Bastion, Firewall (futuro)

## Spoke VNETs (Futuros)
- **Prod Spoke:** 10.2.0.0/16
- **Dev Spoke:** 10.3.0.0/16  
- **Test Spoke:** 10.4.0.0/16

## Conectividad
- **VNet Peering:** Hub ‚Üî Cada Spoke
- **Routing:** Todo tr√°fico v√≠a Hub
- **Security:** Pol√≠ticas centralizadas en Hub
‚úÖ Resultado Final del Laboratorio:
‚Ä¢	‚úÖ VNET segura con 4 subredes segmentadas
‚Ä¢	‚úÖ NSGs configurados con reglas granulares
‚Ä¢	‚úÖ Azure Bastion y Jump Box implementados
‚Ä¢	‚úÖ Arquitectura documentada y validada
‚Ä¢	‚úÖ Plan para expansi√≥n Hub-and-Spoke
‚Ä¢	‚úÖ Base s√≥lida para pr√≥ximas sesiones
________________________________________
üìä VERIFICACI√ìN FINAL Y RESUMEN
‚úÖ Checklist de Completaci√≥n
Laboratorio 1 - Virtual Network:
‚Ä¢	[ ] VNET creada con address space 10.1.0.0/16
‚Ä¢	[ ] 4 subredes segmentadas correctamente
‚Ä¢	[ ] DNS configurado (opcional)
‚Ä¢	[ ] Resource group organizado
Laboratorio 2 - Network Security Groups:
‚Ä¢	[ ] 4 NSGs creados (DMZ, Private, Data, Management)
‚Ä¢	[ ] Reglas de seguridad granulares implementadas
‚Ä¢	[ ] NSGs asociados con subredes correspondientes
‚Ä¢	[ ] Principio de least privilege aplicado
Laboratorio 3 - Acceso Administrativo:
‚Ä¢	[ ] Azure Bastion subnet creada
‚Ä¢	[ ] Azure Bastion deployado (si presupuesto permite)
‚Ä¢	[ ] Jump Box VM configurada
‚Ä¢	[ ] Acceso administrativo seguro sin exposici√≥n directa
Laboratorio 4 - Testing y Documentaci√≥n:
‚Ä¢	[ ] Conectividad validada con Network Watcher
‚Ä¢	[ ] Arquitectura documentada
‚Ä¢	[ ] Plan de expansi√≥n Hub-and-Spoke creado
‚Ä¢	[ ] Verificaci√≥n de security rules
üéØ Resultados de Aprendizaje Alcanzados
Al completar este laboratorio, los estudiantes han logrado:
1.	üèóÔ∏è Arquitectura de Red Segura:
o	Dise√±o y implementaci√≥n de VNET con segmentaci√≥n apropiada
o	Address space planning y subnet design
o	DNS configuration y network topology
2.	üîí Network Security Groups Avanzados:
o	Reglas granulares basadas en principios de seguridad
o	Control de tr√°fico entre subredes
o	Implementation del principio de least privilege
3.	ü¶ò Acceso Administrativo Seguro: 
o	Azure Bastion para acceso sin exposici√≥n p√∫blica
o	Jump Box configurado en subnet de management
o	Eliminaci√≥n de RDP/SSH directo desde Internet
4.	üéØ Defense in Depth Implementation: 
o	M√∫ltiples capas de seguridad implementadas
o	Segmentaci√≥n de red por funci√≥n y sensibilidad
o	Control granular de tr√°fico entre componentes
5.	üìã Documentation y Planning: 
o	Arquitectura documentada apropiadamente
o	Planificaci√≥n para escalabilidad futura
o	Foundation para Hub-and-Spoke architecture
üö® Troubleshooting Com√∫n
Error: "Cannot create subnet - address space overlaps"
‚Ä¢	Soluci√≥n: Verificar que los rangos IP no se solapen
‚Ä¢	Comando: az network vnet subnet list --vnet-name [vnet] --resource-group [rg] --output table
Error: "NSG rule priority conflict"
‚Ä¢	Soluci√≥n: Usar prioridades √∫nicas (100, 110, 120, etc.)
‚Ä¢	Verificaci√≥n: Azure Portal ‚Üí NSG ‚Üí Security rules
Error: "Azure Bastion deployment failed"
‚Ä¢	Soluci√≥n: 
o	Verificar que AzureBastionSubnet es exactamente /26 o mayor
o	Confirmar que el nombre de subnet es exactamente "AzureBastionSubnet"
o	Verificar permisos en la suscripci√≥n
Error: "Cannot connect to Jump Box via Bastion"
‚Ä¢	Soluci√≥n: 
o	Verificar NSG rules permiten tr√°fico desde AzureBastionSubnet
o	Confirmar que VM est√° en estado "Running"
o	Revisar effective security rules
Error: "Network Watcher IP flow verify fails"
‚Ä¢	Soluci√≥n: 
o	Registrar Network Watcher provider: az provider register --namespace Microsoft.Network
o	Verificar que Network Watcher est√° habilitado en la regi√≥n
üìà M√©tricas de √âxito
Indicadores de Implementaci√≥n Exitosa:
‚Ä¢	‚úÖ Network Segmentation: 4 subredes con funciones claramente definidas
‚Ä¢	‚úÖ Security Controls: NSGs con reglas deny-by-default implementadas
‚Ä¢	‚úÖ Administrative Access: Zero direct Internet exposure para management
‚Ä¢	‚úÖ Scalability: Arquitectura lista para Hub-and-Spoke expansion
‚Ä¢	‚úÖ Documentation: Clear architecture documentation maintained
Criterios de Calidad:
‚Ä¢	Address space planning sin overlaps
‚Ä¢	NSG rules siguiendo principio de least privilege
‚Ä¢	Proper subnet sizing para crecimiento futuro
‚Ä¢	Security-first approach en todas las decisiones de dise√±o
üîó Actividades Previas Requeridas
Si no completaron laboratorios anteriores:
Para este laboratorio de infraestructura, NO se requieren los laboratorios de aplicaci√≥n de sesiones anteriores. Este laboratorio es independiente y se enfoca en networking y seguridad de infraestructura.
Sin embargo, si desean integrar aplicaciones futuras:
1.	Configuraci√≥n b√°sica de Azure AD (de Sesi√≥n 4): 
bash
# Verificar acceso a Azure AD
az ad signed-in-user show
2.	Key Vault b√°sico (de Sesi√≥n 5): 
bash
# Crear Key Vault para secretos de infraestructura
az keyvault create \
  --name kv-infra-[sunombre] \
  --resource-group rg-infraestructura-segura-[SuNombre] \
  --location eastus
üéì Preparaci√≥n para Sesi√≥n 7
Para la pr√≥xima sesi√≥n (Lunes 21/07), tendr√°n lista:
1.	Infraestructura base: VNET con segmentaci√≥n apropiada
2.	Security baseline: NSGs configurados y validados
3.	Administrative access: Bastion y Jump Box funcionales
4.	Documentation: Arquitectura documentada y planificada
La Sesi√≥n 7 expandir√°:
‚Ä¢	Azure Firewall implementation
‚Ä¢	DDoS Protection Standard
‚Ä¢	Network monitoring y alerting
‚Ä¢	Hub-and-Spoke architecture completion
‚Ä¢	Application deployment en la infraestructura segura
üåü Conceptos Avanzados Aplicados
Este laboratorio implementa:
1.	Zero Trust Networking: 
o	Never trust, always verify
o	Micro-segmentation implemented
o	Least privilege access controls
2.	Defense in Depth: 
o	Multiple security layers
o	Fail-safe defaults
o	Comprehensive monitoring points
3.	Secure by Design: 
o	Security considerations first
o	Scalable architecture patterns
o	Compliance-ready structure
4.	Cloud Native Security: 
o	Azure-native security services
o	Infrastructure as Code ready
o	Automation-friendly design
üìö Recursos Adicionales
Para profundizar conocimientos:
1.	Microsoft Documentation: 
o	Azure Virtual Network documentation
o	Network Security Groups
o	Azure Bastion
2.	Best Practices: 
o	Azure Network Security Best Practices
o	Hub-spoke network topology
3.	Tools para pr√°ctica: 
o	Azure Network Watcher
o	Azure CLI network commands
o	PowerShell Az.Network module
üéâ ¬°Felicitaciones!
Han completado exitosamente la implementaci√≥n de una infraestructura de red segura en Azure. Esta base s√≥lida les permitir√°:
‚Ä¢	Deployar aplicaciones de manera segura
‚Ä¢	Escalar horizontalmente agregando nuevos componentes
‚Ä¢	Mantener compliance con frameworks de seguridad
‚Ä¢	Monitorear y auditar toda la actividad de red
‚Ä¢	Responder eficientemente a incidentes de seguridad
La arquitectura que han construido es production-ready y sigue las mejores pr√°cticas de la industria para seguridad de infraestructura en la nube.
¬°Nos vemos en la Sesi√≥n 7 para continuar construyendo sobre esta base s√≥lida! üöÄ
________________________________________
üìù Comandos de Referencia R√°pida
Azure CLI - Networking Commands
bash
# Listar VNETs
az network vnet list --output table

# Ver subredes de una VNET
az network vnet subnet list --vnet-name [vnet] --resource-group [rg] --output table

# Listar NSGs
az network nsg list --output table

# Ver reglas de un NSG
az network nsg rule list --nsg-name [nsg] --resource-group [rg] --output table

# Verificar effective security rules
az network nic list-effective-nsg --name [nic] --resource-group [rg]

# Network Watcher - IP flow verify
az network watcher test-ip-flow \
  --vm [vm-name] \
  --direction Inbound \
  --local 10.1.2.4:80 \
  --remote 10.1.1.4:12345 \
  --protocol TCP
PowerShell - Networking Commands
powershell
# Login to Azure
Connect-AzAccount

# List VNETs
Get-AzVirtualNetwork | Select-Object Name, ResourceGroupName, Location

# Get NSG rules
Get-AzNetworkSecurityGroup -Name "nsg-dmz-[sunombre]" -ResourceGroupName "rg-infraestructura-segura-[SuNombre]" | Get-AzNetworkSecurityRuleConfig

# Test connectivity
Test-AzNetworkWatcherConnectivity -NetworkWatcherName "NetworkWatcher_eastus" -ResourceGroupName "NetworkWatcherRG" -SourceResourceId "/subscriptions/.../vm-jumpbox" -DestinationAddress "10.1.2.4" -DestinationPort 80
Este laboratorio establece las bases s√≥lidas para toda la infraestructura de red segura que continuaremos desarrollando en las pr√≥ximas sesiones. ¬°Excelente trabajo! üí™

